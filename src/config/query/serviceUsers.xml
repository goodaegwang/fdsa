<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="serviceUsers">
    <select id="isDuplicatedServiceUserId">
        select status = '1'
        from iot_services_users
        where service_id = UNHEX(#{serviceId})
          and user_id = #{userId}
    </select>
    <insert id="addServiceUser">
        INSERT INTO
        iot_services_users (
        service_id,
        user_id,
        parent_id,
        password,
        name,
        status,
        <if test="tel">
            tel,
        </if>
        <if test="mobilePhone">
            mobile_phone,
        </if>
        <if test="address">
            address,
        </if>
        <if test="addressDesc">
            address_desc,
        </if>
        <if test="email">
            email,
        </if>
        <if test="birthday">
            birthday,
        </if>
        <if test="gender">
            gender,
        </if>
        <if test="maritalStatus">
            marital_status,
        </if>
        created_at,
        updated_at
        )
        VALUES (
        UNHEX(#{serviceId}),
        #{userId},
        #{parentId},
        #{password},
        #{name},
        #{status},
        <if test="tel">
            #{tel},
        </if>
        <if test="mobilePhone">
            #{mobilePhone},
        </if>
        <if test="address">
            #{address},
        </if>
        <if test="addressDesc">
            #{addressDesc},
        </if>
        <if test="email">
            #{email},
        </if>
        <if test="birthday">
            #{birthday},
        </if>
        <if test="gender">
            #{gender},
        </if>
        <if test="maritalStatus">
            #{maritalStatus},
        </if>
        NOW(),
        NOW()
        )
    </insert>
    <select id="getServiceUserList">
        <bind name="searchText" value="'%' + searchText + '%'"/>
        select
        (
        select
        count(*)
        from
        iot_services_users
        where
        service_id = UNHEX(#{serviceId})
        <if test="status and status != ''">
            and status = #{status}
        </if>
        <if test="parentId and parentId != ''">
            and
            parent_id = #{parentId}
            and
            user_id != #{parentId}
        </if>
        <choose>
            <when test="type == 'name'">
                and
                name LIKE #{searchText}
            </when>
            <when test="type == 'id'">
                and
                user_id LIKE #{searchText}
            </when>
        </choose>
        ) as cnt,
        @rownum := @rownum + 1 as rownum,
        U.*
        from
        (
        select
        user_id,
        parent_id,
        name,
        status,
        tel,
        mobile_phone,
        address,
        address_desc,
        email,
        birthday,
        gender,
        marital_status,
        (
        select
        count(*)
        from
        iot_links l,
        iot_devices c
        where
        l.service_id = UNHEX(#{serviceId})
        and l.user_id = s.user_id
        and l.id = c.link_id
        ) as deviceCount,
        (
        select
        count(*)
        from
        iot_services_users u
        where
        parent_id = s.user_id
        and
        user_id != s.user_id
        ) as memberCount,
        created_at,
        closed_at,
        DATE_FORMAT(CONVERT_TZ(created_at, @@session.time_zone, '+00:00'), '%Y-%m-%dT%TZ') as created_at_tz,
        DATE_FORMAT(CONVERT_TZ(closed_at, @@session.time_zone, '+00:00'), '%Y-%m-%dT%TZ') as closed_at_tz
        from
        iot_services_users s
        where
        s.service_id = UNHEX(#{serviceId})
        <if test="status and status != ''">
            and status = #{status}
        </if>
        <if test="parentId and parentId != ''">
            and
            parent_id = #{parentId}
            and
            user_id != #{parentId}
        </if>
        <choose>
            <when test="type == 'name'">
                and
                name LIKE #{searchText}
            </when>
            <when test="type == 'id'">
                and
                user_id LIKE #{searchText}
            </when>
        </choose>
        order by
        <choose>
            <when test="orderBy == 'nameAsc'">
                s.name asc
            </when>
            <when test="orderBy == 'nameDesc'">
                s.name desc
            </when>
            <when test="orderBy == 'idAsc'">
                s.user_id asc
            </when>
            <when test="orderBy == 'idDesc'">
                s.user_id desc
            </when>
            <when test="orderBy == 'createdAtAsc'">
                s.created_at asc
            </when>
            <when test="orderBy == 'createdAtDesc'">
                s.created_at desc
            </when>
            <otherwise>
                s.user_id asc
            </otherwise>
        </choose>
        ) as U,
        (select @rownum := ${offset}) as R
        order by
        <choose>
            <when test="orderBy == 'nameAsc'">
                U.name asc
            </when>
            <when test="orderBy == 'nameDesc'">
                U.name desc
            </when>
            <when test="orderBy == 'idAsc'">
                U.user_id asc
            </when>
            <when test="orderBy == 'idDesc'">
                U.user_id desc
            </when>
            <when test="orderBy == 'createdAtAsc'">
                U.created_at asc
            </when>
            <when test="orderBy == 'createdAtDesc'">
                U.created_at desc
            </when>
            <otherwise>
                U.user_id asc
            </otherwise>
        </choose>
        limit ${limit}
        offset ${offset}
    </select>
    <select id="getServiceUser">
        select HEX(service_id)                                                                    as service_id,
               user_id,
               parent_id,
               password,
               DATE_FORMAT(CONVERT_TZ(created_at, @@session.time_zone, '+00:00'),
                           '%Y-%m-%dT%TZ')                                                        as password_updated_at,
               name,
               status,
               tel,
               mobile_phone,
               address,
               address_desc,
               email,
               birthday,
               gender,
               marital_status,
               DATE_FORMAT(CONVERT_TZ(created_at, @@session.time_zone, '+00:00'), '%Y-%m-%dT%TZ') as created_at_tz,
               DATE_FORMAT(CONVERT_TZ(updated_at, @@session.time_zone, '+00:00'), '%Y-%m-%dT%TZ') as updated_at_tz,
               DATE_FORMAT(CONVERT_TZ(closed_at, @@session.time_zone, '+00:00'), '%Y-%m-%dT%TZ')  as closed_at_tz
        from iot_services_users
        where service_id = UNHEX(#{serviceId})
          and user_id = #{userId}
    </select>
    <update id="updateServiceUser">
        update
        iot_services_users
        set
        <if test="password and password != ''">
            password = #{password},
            password_updated_at = NOW(),
        </if>
        <if test="name and name != ''">
            name = #{name},
        </if>
        <if test="role and role != ''">
            role = #{role},
        </if>
        <if test="role == ''">
            role = null,
        </if>
        <if test="tel and tel != ''">
            tel = #{tel},
        </if>
        <if test="tel == ''">
            tel = null,
        </if>
        <if test="mobile_phone and mobile_phone != ''">
            mobile_phone = #{mobilePhone},
        </if>
        <if test="mobile_phone == ''">
            mobile_phone = null,
        </if>
        <if test="address and address != ''">
            address = #{address},
            address_desc = #{addressDesc},
        </if>
        <if test="address == ''">
            address = null,
            address_desc = null,
        </if>
        <if test="email and email != ''">
            email = #{email},
        </if>
        <if test="email == ''">
            email = null,
        </if>
        <if test="birthday and birthday != ''">
            birthday = #{birthday},
        </if>
        <if test="birthday == ''">
            birthday = null,
        </if>
        <if test="gender and gender != ''">
            gender = #{gender},
        </if>
        <if test="gender == ''">
            gender = null,
        </if>
        <if test="maritalStatus and maritalStatus != ''">
            marital_status = #{maritalStatus},
        </if>
        <if test="maritalStatus == ''">
            marital_status = null,
        </if>
        updated_at = NOW()
        where
        service_id = UNHEX(#{serviceId})
        and user_id = #{userId}
    </update>
    <delete id="deleteAllDeviceFromServiceUser">
        delete
        from iot_devices
        where link_id in (
            select id
            from iot_links
            where owner_id = #{userId}
        )
    </delete>
    <delete id="deleteAllLinkFromServiceUser">
        delete
        from iot_links
        where owner_id = #{userId}
        and service_id = UNHEX(#{serviceId})
    </delete>
    <update id="updateUnusedAllLinkFromServiceUser">
        update
            iot_links
        set use_status = '0',
            owner_id = IF(user_id = owner_id, #{removeId}, owner_id),
            user_id = #{removeId}
        where user_id = #{userId}
        and service_id = UNHEX(#{serviceId})
    </update>
    <update id="withdrawServiceUser">
        update
            iot_services_users
        set status    = '4',
            parent_id = IF(user_id = parent_id, #{removeId}, parent_id),
            user_id = #{removeId},
            name = #{removeName},
            address = #{remveAddress},
            address_desc = #{remveAddressDesc},
            mobile_phone = #{removePhone},
            email = #{removeEmail},
            closed_at = NOW()
        where user_id = #{userId}
        and service_id = UNHEX(#{serviceId})
    </update>
    <select id="findServiceUserIdByMobilePhone">
        select user_id
        from iot_services_users
        where service_id = UNHEX(#{serviceId})
        and status != '4'
        and name = #{name}
        and mobile_phone = #{mobilePhone}
    </select>
    <select id="findServiceUserIdByEmail">
        select user_id
        from iot_services_users
        where service_id = UNHEX(#{serviceId})
        and status != '4'
        and name = #{name}
        and email = #{email}
    </select>
    <update id="changePassword">
        update
            iot_services_users
        set password            = #{password},
            password_updated_at = NOW(),
            updated_at          = NOW()
        where service_id = UNHEX(#{serviceId})
          and user_id = #{userId}
    </update>
    <select id="isRightPassword">
        select true
        from iot_services_users
        where service_id = UNHEX(#{serviceId})
          and user_id = #{userId}
          and password = #{password}
    </select>
    <delete id="deleteServiceUsers">
        delete
        from
        iot_services_users
        where
        service_id = UNHEX(#{serviceId})
        and
        user_id
        in
        (
        <foreach collection="userIds" item="userId" separator=",">
            #{userId}
        </foreach>
        )
    </delete>
    <select id="getUserCount">
        select (
                   select count(*)
                   from iot_services_users
                   where service_id = UNHEX(#{serviceId})
                     and status != '4'
               ) as total,
               (
                   select count(*)
                   from iot_services_users
                   where service_id = UNHEX(#{serviceId})
                     and created_at between #{startDate} and #{endDate}
               ) as new,
               (
                   select count(*)
                   from iot_services_users
                   where service_id = UNHEX(#{serviceId})
                     and status = '4'
                     and closed_at between #{startDate} and #{endDate}
               ) as withdrawal
    </select>
    <select id="getUserStatistics">
        select
        <choose>
            <when test="type == 'new' || type == 'withdrawal'">
                count(*)
            </when>
            <when test="type == 'total'">
                (
                select
                count(*)
                from
                iot_services_users B
                where
                service_id = UNHEX(#{serviceId})
                and
                <![CDATA[
                        B.created_at <= MAX(A.created_at)
                        ]]>
                )
                -
                (
                select
                count(*)
                from
                iot_services_users B
                where
                status = '4'
                and
                service_id = UNHEX(#{serviceId})
                and
                <![CDATA[
                        B.created_at <= MAX(A.created_at)
                        ]]>
                )
            </when>
        </choose>
        as cnt,
        <choose>
            <when test="interval == '1h'">
                DATE_FORMAT(created_at, '%Y-%m-%d %H:00')
            </when>
            <when test="interval == '1d'">
                DATE_FORMAT(created_at, '%Y-%m-%d')
            </when>
            <when test="interval == '1w'">
                CONCAT
                (
                DATE_FORMAT(created_at, '%Y-%m-'),
                WEEK(created_at, 5) - WEEK(DATE_SUB(created_at, INTERVAL DAYOFMONTH(created_at) - 1 DAY), 5) + 1, 'W'
                )
            </when>
            <when test="interval == '1M'">
                DATE_FORMAT(created_at, '%Y-%m')
            </when>
        </choose>
        as date
        from
        <choose>
            <when test="type == 'new' || type == 'withdrawal'">
                iot_services_users
            </when>
            <when test="type == 'total'">
                iot_services_users A
            </when>
        </choose>
        <where>
            and service_id = UNHEX(#{serviceId})
            <choose>
                <when test="type == 'new'">
                </when>
                <when test="type == 'total'">
                    and status != '4'
                </when>
                <when test="type == 'withdrawal'">
                    and status = '4'
                </when>
            </choose>
            <choose>
                <when test="type == 'new' or type == 'total'">
                    and created_at between #{startDate} and #{endDate}
                </when>
                <when test="type == 'withdrawal'">
                    and closed_at between #{startDate} and #{endDate}
                </when>
            </choose>
        </where>
        group by
        <choose>
            <when test="interval == '1h'">
                DATE_FORMAT(created_at, '%Y-%m-%d %H')
            </when>
            <when test="interval == '1d'">
                DATE_FORMAT(created_at, '%Y-%m-%d')
            </when>
            <when test="interval == '1w'">
                CONCAT
                (
                DATE_FORMAT(created_at, '%Y-%m-'),
                WEEK(created_at, 5) - WEEK(DATE_SUB(created_at, INTERVAL DAYOFMONTH(created_at) - 1 DAY), 5) + 1
                )
            </when>
            <when test="interval == '1M'">
                DATE_FORMAT(created_at, '%Y-%m')
            </when>
        </choose>
        order by
        created_at;
    </select>
    <select id="getUserStatisticsAsWithdrawal">
        select
        <choose>
            <when test="type == 'new' || type == 'withdrawal'">
                count(*)
            </when>
            <when test="type == 'total'">
                (
                select
                count(*)
                from
                iot_services_users B
                where
                service_id = UNHEX(#{serviceId})
                and
                <![CDATA[
                        B.closed_at <= MAX(A.closed_at)
                        ]]>
                )
                -
                (
                select
                count(*)
                from
                iot_services_users B
                where
                status = '4'
                and
                service_id = UNHEX(#{serviceId})
                and
                <![CDATA[
                        B.closed_at <= MAX(A.closed_at)
                        ]]>
                )
            </when>
        </choose>
        as cnt,
        <choose>
            <when test="interval == '1h'">
                DATE_FORMAT(closed_at, '%Y-%m-%d %H:00')
            </when>
            <when test="interval == '1d'">
                DATE_FORMAT(closed_at, '%Y-%m-%d')
            </when>
            <when test="interval == '1w'">
                CONCAT
                (
                DATE_FORMAT(closed_at, '%Y-%m-'),
                WEEK(closed_at, 5) - WEEK(DATE_SUB(closed_at, INTERVAL DAYOFMONTH(closed_at) - 1 DAY), 5) + 1, 'W'
                )
            </when>
            <when test="interval == '1M'">
                DATE_FORMAT(closed_at, '%Y-%m')
            </when>
        </choose>
        as date
        from
        <choose>
            <when test="type == 'new' || type == 'withdrawal'">
                iot_services_users
            </when>
            <when test="type == 'total'">
                iot_services_users A
            </when>
        </choose>
        <where>
            and service_id = UNHEX(#{serviceId})
            <choose>
                <when test="type == 'new'">
                </when>
                <when test="type == 'total'">
                    and status != '4'
                </when>
                <when test="type == 'withdrawal'">
                    and status = '4'
                </when>
            </choose>
            <choose>
                <when test="type == 'new' or type == 'total'">
                    and closed_at between #{startDate} and #{endDate}
                </when>
                <when test="type == 'withdrawal'">
                    and closed_at between #{startDate} and #{endDate}
                </when>
            </choose>
        </where>
        group by
        <choose>
            <when test="interval == '1h'">
                DATE_FORMAT(closed_at, '%Y-%m-%d %H')
            </when>
            <when test="interval == '1d'">
                DATE_FORMAT(closed_at, '%Y-%m-%d')
            </when>
            <when test="interval == '1w'">
                CONCAT
                (
                DATE_FORMAT(closed_at, '%Y-%m-'),
                WEEK(closed_at, 5) - WEEK(DATE_SUB(closed_at, INTERVAL DAYOFMONTH(closed_at) - 1 DAY), 5) + 1
                )
            </when>
            <when test="interval == '1M'">
                DATE_FORMAT(closed_at, '%Y-%m')
            </when>
        </choose>
        order by
        closed_at;
    </select>
    <select id="getFirstTotalCount">
        select (
        select count(*)
        from iot_services_users B
        where service_id = UNHEX(#{serviceId})
        <![CDATA[
        and B.created_at<= MAX(A.created_at)
        ]]>
        )
        -
        (
        select count(*)
        from iot_services_users B
        where status = '4'
        and service_id = UNHEX(#{serviceId})
        <![CDATA[
        and B.created_at<= MAX(A.created_at)
        ]]>
        )
        as cnt
        from iot_services_users A
        WHERE service_id = UNHEX(#{serviceId})
        and status != '4'
        <![CDATA[
        and created_at <= #{startDate}
        ]]>
        group by
        <choose>
            <when test="interval == '1h'">
                DATE_FORMAT(created_at, '%Y-%m-%d %H')
            </when>
            <when test="interval == '1d'">
                DATE_FORMAT(created_at, '%Y-%m-%d')
            </when>
            <when test="interval == '1w'">
                CONCAT
                (
                DATE_FORMAT(created_at, '%Y-%m-'),
                WEEK(created_at, 5) - WEEK(DATE_SUB(created_at, INTERVAL DAYOFMONTH(created_at) - 1 DAY), 5) + 1
                )
            </when>
            <when test="interval == '1M'">
                DATE_FORMAT(created_at, '%Y-%m')
            </when>
        </choose>
        order by created_at desc
        limit 1;
    </select>
    <select id="getPushkeyList">
        select
        distinct pushkey,
        (
            select
            count(distinct pushkey)
            from
            iot_services_users_pushkeys
            where
            service_id = UNHEX(#{serviceId})
            <if test="cloudDeviceId and cloudDeviceId != ''">
            and user_id in
            (
            select distinct user_id from iot_links l, iot_devices c, iot_cloud_devices cc
            where cc.id = UNHEX(#{cloudDeviceId}) and l.service_id = UNHEX(#{serviceId})
            and l.id = c.link_id and c.cloud_device_id = cc.id
            )
            </if>
        ) as cnt
        from
        iot_services_users_pushkeys
        where
        service_id = UNHEX(#{serviceId})
        <if test="cloudDeviceId and cloudDeviceId != ''">
            and user_id in
            (
            select distinct user_id from iot_links l, iot_devices c, iot_cloud_devices cc
            where cc.id = UNHEX(#{cloudDeviceId}) and l.service_id = UNHEX(#{serviceId})
            and l.id = c.link_id and c.cloud_device_id = cc.id
            )
        </if>
        limit ${limit}
        offset ${offset}
    </select>
    <insert id="savePushKey">
        insert into iot_services_users_pushkeys
        (
        service_id,
        pushkey,
        user_id,
        client_id,
        os
        )
        values (
        UNHEX(#{serviceId}),
        #{pushkey},
        #{userId},
        #{clientId},
        #{os}
        )
        ON DUPLICATE KEY UPDATE
        user_id = #{userId},
        client_id = #{clientId},
        os = #{os},
        updated_at = CURRENT_TIMESTAMP(3)
    </insert>
</mapper>
